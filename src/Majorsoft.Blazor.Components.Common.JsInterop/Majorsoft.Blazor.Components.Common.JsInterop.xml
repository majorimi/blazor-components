<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Majorsoft.Blazor.Components.Common.JsInterop</name>
    </assembly>
    <members>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.BrowserColorThemes">
            <summary>
            Browsers preferred color scheme/theme
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.BrowserThemeEventInfo">
            <summary>
            Browser color scheme queries response event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.BrowserThemeService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.IBrowserThemeService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.IBrowserThemeService">
            <summary>
            Injectable service to handle Browser color scheme queries and changes.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.IBrowserThemeService.GetBrowserColorThemeAsync">
            <summary>
            Browser color scheme queries to return actual `prefers-color-scheme`.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.IBrowserThemeService.RegisterColorThemeChangeAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.BrowserColorThemes,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for `prefers-color-scheme` HTML event for the Browser.
            </summary>
            <param name="colorThemeChangeCallback"></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.IBrowserThemeService.RemoveColorThemeChangeAsync(System.String)">
            <summary>
            Removes event listener for `prefers-color-scheme` HTML event for the Browser.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.IBrowserThemeService.RegisterColorThemeChangeAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.BrowserColorTheme.BrowserColorThemes,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserDate.BrowserDateService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserDate.IBrowserDateService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.BrowserDate.IBrowserDateService">
            <summary>
            Injectable service to query Browser Date with JS Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.BrowserDate.IBrowserDateService.GetBrowserDateTimeAsync">
            <summary>
            Returns Date and time from browser client machine.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesEventInfo">
            <summary>
            ClickBoundariesEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler">
            <summary>
            Injectable service to handle JS 'click' events for the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler.RegisterClickBoundariesAsync(Microsoft.AspNetCore.Components.ElementReference,System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task},System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'click' HTML event for the given element with property filter.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <param name="outsideClickCallback">Func to call when clicked outside of the given element</param>
            <param name="insideClickCallback">Func to call when clicked inside of the given element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Click.IClickBoundariesHandler.RemoveClickBoundariesAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Removes event listener for 'click' HTML event for the given element.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesElement.Content">
            <summary>
            HTML Content of Click detection element.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesElement.OnOutsideClick">
            <summary>
            Callback function called when clicked outside of the given element.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Click.ClickBoundariesElement.OnInsideClick">
            <summary>
            Callback function called when clicked inside of the given element.
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.ClipboardExtensions">
            <summary>
            Static class for extension methods
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.ClipboardExtensions.CopyElementTextToClipboardAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Copies the given element text content to clipboard.
            </summary>
            <param name="elementReference">ElementReference to get text</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.ClipboardHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler">
            <summary>
            Injectable service to handle JS 'copy' to clipboard Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler.CopyElementTextToClipboardAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Copies the given element text content to clipboard.
            </summary>
            <param name="elementReference">ElementReference to get text</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Clipboard.IClipboardHandler.CopyTextToClipboardAsync(System.String)">
            <summary>
            Copies the given text content to clipboard.
            </summary>
            <param name="elementReference">Text to copy</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.ElementInfo.ElementReferenceInfoExtensions">
            <summary>
            Static class for <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> extension methods.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.ElementInfo.ElementReferenceInfoExtensions.GetClientRectAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns the given HTML element ClintBoundRect data.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task with <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.ElementInfo.DomRect"/> value</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Focus.FocusHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler">
            <summary>
            Injectable service to handle JS 'focus' Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.GetFocusedElementAsync">
            <summary>
            Returns the actually focused HTML DOM element reference. It works with outside element of a Blazor component.
            Note: <see cref="T:Microsoft.JSInterop.IJSObjectReference"/> object is disposable.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.FocusElementAsync(Microsoft.JSInterop.IJSObjectReference)">
            <summary>
            Sets focus on the given HTML DOM element reference
            Note: <see cref="T:Microsoft.JSInterop.IJSObjectReference"/> object is disposable.
            </summary>
            <param name="objectReference">IJSObjectReference to set focus on</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.FocusElementAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Sets focus on the given HTML DOM element reference
            </summary>
            <param name="elementReference">ElementReference to set focus on</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.StoreFocusedElementAsync">
            <summary>
            Stores the actually focused HTML DOM element reference into a JS variable. This can be restored by calling <code>RestoreStoredElementFocusAsync</code> method.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Focus.IFocusHandler.RestoreStoredElementFocusAsync(System.Boolean)">
            <summary>
            Restores the HTML DOM element reference stored by calling <code>StoreFocusedElementAsync</code> method.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates">
            <summary>
            The GeolocationCoordinates interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.
            https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Latitude">
            <summary>
            Representing the latitude of the position in decimal degrees.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Longitude">
            <summary>
            Represents the longitude of a geographical position, specified in decimal degrees.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Accuracy">
            <summary>
            representing the accuracy, with a 95% confidence level, of the 
            <see cref="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Latitude"/> and <see cref="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Longitude"/> properties expressed in meters.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Altitude">
            <summary>
            Representing the altitude of the position in meters above the WGS84 ellipsoid (which defines the nominal sea level surface). 
            This value is null if the implementation cannot provide this data.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.AltitudeAccuracy">
            <summary>
            Representing the accuracy, with a 95% confidence level, of the <see cref="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Altitude"/> expressed in meters. 
            This value is null if the implementation doesn't support measuring altitude.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Speed">
            <summary>
            Representing the velocity of the device in meters per second. This value can be null.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationCoordinates.Heading">
            <summary>
            representing the direction in which the device is traveling. This value, specified in degrees, indicates how far off from heading due north the device is. 
            Zero degrees represents true north, and the direction is determined clockwise (which means that east is 90 degrees and west is 270 degrees). 
            If GeolocationCoordinates.speed is 0, heading is NaN. If the device is not able to provide heading information, this value is null.
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationError">
            <summary>
            The GeolocationPositionError interface represents the reason of an error occurring when using the geolocating device.
            https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationError.ErrorCode">
            <summary>
            Represents the reason of an error occurring.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationError.ErrorMessage">
            <summary>
            Returns a human-readable DOMString describing the details of the error.
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationEventCurrentPositionInfo">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationEventInfo"/> for GetCurrentPosition method with self dispose <see cref="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationEventCurrentPositionInfo.DotNetObjectReference"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationEventInfo">
            <summary>
            Base class for Geolocation event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationEventWatcherInfo">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationEventInfo"/> for AddGeolocationWatcher method.
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationPositionErrorCodes">
            <summary>
            Represents the reason of an error occurring when using the geolocating device.
            </summary>
        </member>
        <member name="F:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationPositionErrorCodes.PERMISSION_DENIED">
            <summary>
            The acquisition of the geolocation information failed because the page didn't have the permission to do it.
            </summary>
        </member>
        <member name="F:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationPositionErrorCodes.POSITION_UNAVAILABLE">
            <summary>
            The acquisition of the geolocation failed because at least one internal source of position returned an internal error.
            </summary>
        </member>
        <member name="F:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationPositionErrorCodes.TIMEOUT">
            <summary>
            The time allowed to acquire the geolocation, defined by PositionOptions.timeout information was reached before the information was obtained.
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult">
            <summary>
            Wrapper object for return value of Geolocation service.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult.Coordinates">
            <summary>
            Represents the position, if any.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult.Error">
            <summary>
            Represents the reason of an error occurring, if any.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult.IsSuccess">
            <summary>
            Returns true if there is no error object, otherwise false.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult.TimeStamp">
            <summary>
            Event time
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService">
            <summary>
            Injectable service to handle Browser Geolocation Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService.GetCurrentPositionAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult,System.Threading.Tasks.Task},System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Get the current position of the device.
            </summary>
            <param name="locationResultCallback">Callback function which will receive <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult"/></param>
            <param name="highAccuracy">Indicates the application would like to receive the best possible results</param>
            <param name="timeout">Representing the maximum length of time (in milliseconds) the device is allowed to take in order to return a position. Default is 5000</param>
            <param name="cacheTime">Indicating the maximum age in milliseconds of a possible cached position that is acceptable to return. Default is 0 (no cache)</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService.AddGeolocationWatcherAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult,System.Threading.Tasks.Task},System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Register a handler function that will be called automatically each time the position of the device changes.
            </summary>
            <param name="locationEventsCallback">Callback function which will receive <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult"/></param>
            <param name="highAccuracy">Indicates the application would like to receive the best possible results</param>
            <param name="timeout">Representing the maximum length of time (in milliseconds) the device is allowed to take in order to return a position. Default is 5000</param>
            <param name="cacheTime">Indicating the maximum age in milliseconds of a possible cached position that is acceptable to return. Default is 0 (no cache)</param>
            <returns>Async Task with int32 handlerId which can be used to remove watcher in <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService.RemoveGeolocationWatcherAsync(System.Int32)"/></returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService.RemoveGeolocationWatcherAsync(System.Int32)">
            <summary>
            Unregister location/error monitoring handlers previously installed using <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Geo.IGeolocationService.AddGeolocationWatcherAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Geo.GeolocationResult,System.Threading.Tasks.Task},System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})"/>
            </summary>
            <param name="handlerId"></param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.GlobalMouseEventHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler">
            <summary>
            Injectable service to handle JS document/window 'mouse' events for the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseMoveAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for mouse 'move' HTML event for the whole document/window.
            </summary>
            <param name="mouseMoveCallback">Func to call when mouse move happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RemovePageMouseMoveAsync(System.String)">
            <summary>
            Removes event listener for mouse 'move' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseMoveAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseDownAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for mouse 'down' HTML event for the whole document/window.
            </summary>
            <param name="mouseDownCallback">Func to call when mouse down happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RemovePageMouseDownAsync(System.String)">
            <summary>
            Removes event listener for mouse 'down' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseDownAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseUpAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for mouse 'up' HTML event for the whole document/window.
            </summary>
            <param name="mouseUpCallback">Func to call when mouse move happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RemovePageMouseUpAsync(System.String)">
            <summary>
            Removes event listener for mouse 'up' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.IGlobalMouseEventHandler.RegisterPageMouseUpAsync(System.Func{Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.PageMouseEventInfo">
            <summary>
            PageMouseEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs">
            <summary>
            Custom defined event args for Resize events
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs.Height">
            <summary>
            Element or Window height
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs.Width">
            <summary>
            Element or Window width
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs.EventId">
            <summary>
            Registered event id
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventInfo">
            <summary>
            PageResizeEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag">
            <summary>
            The `link` tag defines the relationship between the current document and an external resource.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Crossorigin">
            <summary>
            Specifies how the element handles cross-origin requests
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Href">
            <summary>
            Specifies the location of the linked document
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.HrefLang">
            <summary>
            Specifies the language of the text in the linked document
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Media">
            <summary>
            Specifies on what device the linked document will be displayed
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.ReferrerPolicy">
            <summary>
            Specifies which referrer to use when fetching the resource
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Rel">
            <summary>
            Required. Specifies the relationship between the current document and the linked document
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Sizes">
            <summary>
            Specifies the size of the linked resource. Only for rel="icon"
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Title">
            <summary>
            Defines a preferred or an alternate stylesheet
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Type">
            <summary>
            Specifies the media type of the linked document
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService">
            <summary>
            Injectable service to handle HTML Head Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService.GetHtmlTitleAsync">
            <summary>
            Returns the current HTML page title.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService.SetHtmlTitleAsync(System.String)">
            <summary>
            Sets the given string value as HTML page title.
            </summary>
            <param name="title"></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService.GetHtmlHeadLinkTagsAsync(System.Nullable{Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTagRelTypes})">
            <summary>
            Returns all existing Link tags from HTML page Head by given Rel type filter.
            </summary>
            <param name="linkType">Allowed Link `rel` types</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService.GetHtmlFavIconsAsync">
            <summary>
            Returns all existing fav icon "rel=icon" tags from HTML page Head.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService.SetHtmlFavIconsAsync(System.Collections.Generic.IEnumerable{Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag})">
            <summary>
            Removes all existing fav icon "rel=icon" tags from HTML page Head and creates new tags from the given objects.
            If you have multiple fav icon tags set in the Head first call <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Head.IHtmlHeadService.GetHtmlFavIconsAsync"/> method and change <see cref="P:Majorsoft.Blazor.Components.Common.JsInterop.Head.HtmlHeadLinkTag.Href"/> values.
            </summary>
            <param name="favIcons">New fav icons to set</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.JsInteropExtension">
            <summary>
            Extension methods to register required JS Interop services into IServiceCollection
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.JsInteropExtension.AddJsInteropExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers required JS Interop services into IServiceCollection
            </summary>
            <param name="services">IServiceCollection instance</param>
            <returns>IServiceCollection</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Language.ILanguageService">
            <summary>
            Injectable service to handle Browser language Interops.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Language.ILanguageService.GetBrowserLanguageAsync">
            <summary>
            Returns the browser preferred language.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Language.LanguageService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Language.ILanguageService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService">
            <summary>
            Injectable service to handle Browser history JS Interops.
            https://developer.mozilla.org/en-US/docs/Web/API/History
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.GetLengthAsync">
            <summary>
            Returns an Integer representing the number of elements in the session history, including the currently loaded page. For example, for a page loaded in a new tab this property returns 1.
            </summary>
            <returns>ValueTask</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.GetScrollRestorationAsync">
            <summary>
            Allows web applications to explicitly set default scroll restoration behavior on history navigation. This property can be either `auto` or `manual`.
            </summary>
            <returns>ValueTask</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.BackAsync">
            <summary>
            This asynchronous method goes to the previous page in session history, the same action as when the user clicks the browser's Back button. Equivalent to history.go(-1).
            </summary>
            <returns>ValueTask</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.ForwardAsync">
            <summary>
            This asynchronous method goes to the next page in session history, the same action as when the user clicks the browser's Forward button; this is equivalent to history.go(1).
            </summary>
            <returns>ValueTask</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.GoAsync(System.Int32)">
            <summary>
            Asynchronously loads a page from the session history, identified by its relative location to the current page, for example -1 for the previous page or 1 for the next page.
            </summary>
            <param name="delta">The position in the history to which you want to move, relative to the current page. A negative value moves backwards, a positive value moves forwards.</param>
            <returns>ValueTask</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.ReplaceStateAsync(System.Dynamic.ExpandoObject,System.String,System.String)">
            <summary>
            Updates the most recent entry on the history stack to have the specified data, title, and, if provided, URL.
            </summary>
            <param name="state">Arbitrary object of the page</param>
            <param name="title">Page tile</param>
            <param name="url">New URL to show and add to history</param>
            <returns>ValueTask</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService.PushStateAsync(System.Dynamic.ExpandoObject,System.String,System.String)">
            <summary>
            Pushes the given data onto the session history stack with the specified title (and, if provided, URL).
            </summary>
            <param name="state">Arbitrary object of the page</param>
            <param name="title">Page tile</param>
            <param name="url">New URL to show and add to history</param>
            <returns>ValueTask</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.NavigationHistoryService">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Navigation.INavigationHistoryService"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler">
            <summary>
            Injectable service to handle JS 'resize' events for HTML element or the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RegisterPageResizeAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'resize' HTML event for the whole document/window.
            </summary>
            <param name="resizeCallback">Func to call when page resize happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RemovePageResizeAsync(System.String)">
            <summary>
            Removes event listener for 'resize' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RegisterPageResizeAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.GetPageSizeAsync">
            <summary>
            Returns Browser Window inner size (height and width in Pixel).
            </summary>
            <returns>Async Task with Window size</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.GetScreenSizeAsync">
            <summary>
            Returns Browser Window screen size (height and width in Pixel).
            </summary>
            <returns>Async Task with Window size</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RegisterResizeAsync(Microsoft.AspNetCore.Components.ElementReference,System.Func{Majorsoft.Blazor.Components.Common.JsInterop.GlobalMouseEvents.ResizeEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'resize' HTML event for the given element with property filter.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <param name="resizeCallback">Func to call when the given element was resized</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler.RemoveResizeAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Removes event listener for 'resize' HTML event for the given element.
            </summary>
            <param name="elementRef">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize">
            <summary>
            Custom type to represent Browser Window size.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize.Height">
            <summary>
            Browser Window height
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize.Width">
            <summary>
            Browser Window width
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Resize.PageSize.ToString">
            <summary>
            PageSize string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.ResizeHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Resize.IResizeHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> HTML elements.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToElementAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
            <summary>
            Scrolls HTML page to given element.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToEndAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
            <summary>
            Scrolls inside the given element to the bottom (end).
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToTopAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
            <summary>
            Scrolls inside the given element to the beginning (top).
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToXAsync(Microsoft.AspNetCore.Components.ElementReference,System.Double,System.Boolean)">
            <summary>
            Scrolls inside the given element to the given X position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="xPos">Scroll X position</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToYAsync(Microsoft.AspNetCore.Components.ElementReference,System.Double,System.Boolean)">
            <summary>
            Scrolls inside the given element to the given Y position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="yPos">Scroll Y position</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToAsync(Microsoft.AspNetCore.Components.ElementReference,System.Double,System.Double,System.Boolean)">
            <summary>
            Scrolls inside the given element to the given X and Y positions.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="xPos">Scroll X position</param>
            <param name="yPos">Scroll Y position</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.GetScrollXPositionAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element scroll X (left) position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task with X pos</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.GetScrollYPositionAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element scroll Y (top) position.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task with Y pos</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.IsElementHiddenAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element is visible on HTML document or not.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.IsElementHiddenBelowAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element is below of the view port.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.IsElementHiddenAboveAsync(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Returns given element is above of the view port.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollToElementInParentAsync(Microsoft.AspNetCore.Components.ElementReference,Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Scrolls inside the given parent element to the given inner element.
            </summary>
            <param name="parent">Blazor reference to an HTML (outer/wrapper) element</param>
            <param name="innerElement">Blazor reference to an inner HTML element to scroll to</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollInParentByIdAsync(Microsoft.AspNetCore.Components.ElementReference,System.String)">
            <summary>
            Scrolls inside the given parent element to the given inner element by Id.
            </summary>
            <param name="parent">Blazor reference to an HTML (outer/wrapper) element</param>
            <param name="id">Inner element Id to scroll to</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ElementReferenceScrollExtensions.ScrollInParentByClassAsync(Microsoft.AspNetCore.Components.ElementReference,System.String)">
            <summary>
            Scrolls inside the given parent element to the given first found inner element by class name.
            </summary>
            <param name="parent">Blazor reference to an HTML (outer/wrapper) element</param>
            <param name="className">Inner element CSS class to scroll to</param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler">
            <summary>
            Injectable service to handle JS document/window 'scroll' events for the whole document.
            </summary>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToElementAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
            <summary>
            Scrolls the given element into the page view area.
            </summary>
            <param name="elementReference">Blazor reference to an HTML element</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToElementByIdAsync(System.String,System.Boolean)">
            <summary>
            Finds element by Id and scrolls the given element into the page view area.
            </summary>
            <param name="id">DOM element id</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToElementByNameAsync(System.String,System.Boolean)">
            <summary>
            Finds element by name and scrolls the given element into the page view area.
            </summary>
            <param name="name">DOM element name</param>
            <param name="smooth">Scroll should jump or smoothly scroll Note: might not all browsers support it</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageEndAsync(System.Boolean)">
            <summary>
            Scrolls to end of the page (X bottom).
            </summary>
            <param name="smooth">Scroll should jump or smoothly scroll</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageTopAsync(System.Boolean)">
            <summary>
            Scrolls to top of the page (X top).
            </summary>
            <param name="smooth">Scroll should jump or smoothly scroll</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageXAsync(System.Double,System.Boolean)">
            <summary>
            Scrolls to X position on the page.
            </summary>
            <param name="x">Scroll top x value</param>
            <param name="smooth">Scroll should jump or smoothly scroll</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.ScrollToPageYAsync(System.Double,System.Boolean)">
            <summary>
            Scrolls to Y position on the page.
            </summary>
            <param name="y">Scroll top x value</param>
            <param name="smooth">Scroll should jump or smoothly scroll</param>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.GetPageScrollPosAsync">
            <summary>
            Returns page X,Y scroll current position as <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult"/>.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.GetPageScrollSizeAsync">
            <summary>
            Returns page X,Y scroll size (max values) as <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult"/>.
            </summary>
            <returns>Async Task</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.RegisterPageScrollAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs,System.Threading.Tasks.Task})">
            <summary>
            Adds event listener for 'scroll' HTML event for the whole document/window.
            </summary>
            <param name="scrollCallback">Func to call when scroll happened</param>
            <returns>Async Task with event id to unsubscribe from event</returns>
        </member>
        <member name="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.RemovePageScrollAsync(System.String)">
            <summary>
            Removes event listener for 'scroll' HTML event for the whole document/window by the given event Id.
            </summary>
            <param name="eventId">Event id from <see cref="M:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler.RegisterPageScrollAsync(System.Func{Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs,System.Threading.Tasks.Task})"/></param>
            <returns>Async Task</returns>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.PageScrollEventInfo">
            <summary>
            PageScrollEventInfo event <see cref="T:Microsoft.JSInterop.DotNetObjectReference"/> info to handle JS callback
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.PageScrollHorizontalPosition">
            <summary>
            Page scroll elements orientation on page <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom"/> and <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop"/> elements
            </summary>
        </member>
        <member name="F:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.PageScrollHorizontalPosition.Right">
            <summary>
            Element placed to the Right side 
            </summary>
        </member>
        <member name="F:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.PageScrollHorizontalPosition.Left">
            <summary>
            Element placed to the Left side 
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs">
            <summary>
            Scroll event args
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs.X">
            <summary>
            Scroll X position
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollEventArgs.Y">
            <summary>
            Scroll Y position
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollHandler">
            <summary>
            Implementation of <see cref="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.IScrollHandler"/>
            </summary>
        </member>
        <member name="T:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult">
            <summary>
            Scroll result
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult.X">
            <summary>
            Scroll X value
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult.Y">
            <summary>
            Scroll Y value
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult.IsPageTop">
            <summary>
            Is scroll at page top
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollResult.IsPageBottom">
            <summary>
            Is scroll at page bottom.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.InnerElementReference">
            <summary>
            Exposes a Blazor <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> of the wrapped around HTML element. It can be used e.g. for JS interop, etc.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.Content">
            <summary>
            HTML Content of the scroll panel.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.VisibleFromPagePercentage">
            <summary>
            Element should be visible when scroll reached page % of given value.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.VisibleUntilPagePercentage">
            <summary>
            Element should be visible until scroll reached page % of given value.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.SmootScroll">
            <summary>
            Scroll should be jump or smoothly scroll.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.AnimateOnHover">
            <summary>
            Apply animation (opacity) on icon when mouse hovered.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.PaddingFromTop">
            <summary>
            Required space from page bottom in px.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.PaddingFromSide">
            <summary>
            Required space from page (left/right) side in px.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageBottom.HorizontalPosition">
            <summary>
            Element position on page {Right, Left}.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.InnerElementReference">
            <summary>
            Exposes a Blazor <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> of the wrapped around HTML element. It can be used e.g. for JS interop, etc.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.Content">
            <summary>
            HTML Content of the scroll panel.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.VisibleFromPagePercentage">
            <summary>
            Element should be visible when scroll reached page % of given value.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.SmootScroll">
            <summary>
            Scroll should be jump or smoothly scroll.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.AnimateOnHover">
            <summary>
            Apply animation (opacity) on icon when mouse hovered.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.PaddingFromBottom">
            <summary>
            Required space from page bottom in px.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.PaddingFromSide">
            <summary>
            Required space from page (left/right) side in px.
            </summary>
        </member>
        <member name="P:Majorsoft.Blazor.Components.Common.JsInterop.Scroll.ScrollToPageTop.HorizontalPosition">
            <summary>
            Element position on page {Right, Left}.
            </summary>
        </member>
    </members>
</doc>
