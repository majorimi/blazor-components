export function init(t,i,r,u,e,o){if(t&&i&&r){f(n,i,r,u,e,o);let s="https://maps.googleapis.com/maps/api/js?key=",c=!1,a=document.querySelectorAll("head > script");if(a.forEach(n=>{if(n){let t=n.getAttribute("src");if(t&&t.startsWith(s)){c=!0;return}}}),c){window.google&&window.initGoogleMaps();return}let l=document.createElement("script");l.src="https://polyfill.io/v3/polyfill.min.js?features=default";document.head.appendChild(l);s=s+t+"&callback=initGoogleMaps&libraries=&v=weekly";let h=document.createElement("script");h.src=s;h.defer=!0;document.head.appendChild(h)}}function f(n,t,i,r,u,f){for(let i=0;i<n.length;i++)if(n[i].key===t)return;!1||n.push({key:t,value:{ref:i,map:null,bgColor:r,ctrSize:u,restriction:f}})}function e(n,t){for(let i=0;i<n.length;i++)if(n[i].key===t){n.splice(i,1);break}}function t(n,t){for(let i=0;i<n.length;i++)if(n[i].key===t)return n[i].value}export function setCenterCoords(i,r,u){if(i){let f=t(n,i);f&&f.map&&f.map.setCenter({lat:r,lng:u})}}export function setCenterAddress(i,r){if(i){let f=t(n,i);f&&f.map&&u(r,function(n){n&&f.map.setCenter(n[0].geometry.location)})}}export function panToCoords(i,r,u){if(i){let f=t(n,i);f&&f.map&&f.map.panTo({lat:r,lng:u})}}export function panToAddress(i,r){if(i){let f=t(n,i);f&&f.map&&u(r,function(n){n&&f.map.panTo(n[0].geometry.location)})}}export function getBounds(r){if(r){let u=t(n,r);if(u&&u.map){let n=u.map.getBounds();return{Center:i(n.getCenter()),NorthEast:i(n.getNorthEast()),SouthWest:i(n.getSouthWest()),Span:i(n.toSpan()),IsEmpty:n.isEmpty()}}}}export function getCenter(r){if(r){let u=t(n,r);if(u&&u.map){let n=u.map.getCenter();return i(n)}}}export function getDiv(i){if(i){let u=t(n,i);if(u&&u.map){var r=u.map.getDiv();return r}}}function i(n){return{Latitude:n.lat(),Longitude:n.lng()}}export function setZoom(i,r){if(i){let u=t(n,i);u&&u.map&&u.map.setZoom(r)}}export function setMapType(i,r){if(i){let u=t(n,i);u&&u.map&&u.map.setMapTypeId(r)}}export function setHeading(i,r){if(i){let u=t(n,i);u&&u.map&&u.map.setHeading(r)}}export function setTilt(i,r){if(i){let u=t(n,i);u&&u.map&&u.map.setTilt(r)}}export function setClickableIcons(i,r){if(i){let u=t(n,i);u&&u.map&&u.map.setClickableIcons(r)}}export function setOptions(i,r){if(i){let u=t(n,i);u&&u.map&&u.map.setOptions(r)}}export function resizeMap(i){if(i){let r=t(n,i);r&&r.map&&google.maps.event.trigger(r.map,"resize")}}export function createCustomControls(i,r){if(i&&r){let f=t(n,i);if(f&&f.map)for(var u=0;u<r.length;u++){let n=r[u],t=document.createElement("div");t.innerHTML=n.content;f.map.controls[n.controlPosition].push(t);let i=n.id,e=f.ref;t.addEventListener("click",()=>{e.invokeMethodAsync("CustomControlClicked",i)})}}}export function createMarkers(i,u){if(i&&u&&u.length){let e=t(n,i);if(e&&e.map)for(var f=0;f<u.length;f++){let n=u[f],t=new google.maps.Marker({id:n.id,crossOnDrag:n.crossOnDrag,optimized:n.optimized});if(t.setMap(e.map),o(n,t),r.push(t),n.clickable){let i=null;n.infoWindow&&(i=new google.maps.InfoWindow({content:n.infoWindow.content,maxWidth:n.infoWindow.maxWidth}));t.addListener("click",()=>{e.ref.invokeMethodAsync("MarkerClicked",n.id),i&&i.open(e.map,t)})}if(n.draggable){t.addListener("drag",()=>{i("MarkerDrag",n.id,t.getPosition().toJSON())});t.addListener("dragend",()=>{i("MarkerDragEnd",n.id,t.getPosition().toJSON())});t.addListener("dragstart",()=>{i("MarkerDragStart",n.id,t.getPosition().toJSON())});function i(n,t,i){let r={Latitude:i.lat,Longitude:i.lng};e.ref.invokeMethodAsync(n,t,r)}}}}}export function removeMarkers(i,u){if(i&&u&&u.length){let e=t(n,i);if(e&&e.map)for(var f=0;f<u.length;f++){let n=u[f];r.forEach((t,i)=>{if(n.id==t.id){t.setMap(null);r.splice(i,1);return}})}}}function o(n,t){t&&n&&(t.setPosition({lat:n.position.latitude,lng:n.position.longitude}),t.anchorPoint=n.anchorPoint?{x:n.anchorPoint.x,y:n.anchorPoint.y}:null,t.setAnimation(n.animation),t.setClickable(n.clickable),t.crossOnDrag=n.crossOnDrag,t.setCursor(n.cursor),t.setDraggable(n.draggable),t.setIcon(n.icon),t.setLabel(n.label),t.setOpacity(n.opacity),t.optimized=n.optimized,t.setShape(n.shape),t.setTitle(n.title),t.setVisible(n.visible),t.setZIndex(n.zIndex))}export function polylineSetMap(i,r){if(i&&r&&r.length){let f=t(n,i);if(f&&f.map)for(var u=0;u<r.length;u++)let n=r[u]}}export function getAddressCoordinates(i,r){u(r,function(r){if(r){let u=t(n,i);u&&u.map&&u.ref.invokeMethodAsync("AddressSearch",r)}})}function u(n,t){let i=new google.maps.Geocoder;i.geocode({address:n},function(n,i){i==google.maps.GeocoderStatus.OK&&t(n)})}export function dispose(i){if(i){let r=t(n,i);r.map=null;r.ref=null;e(n,i)}}window.initGoogleMaps=()=>{for(let i=0;i<n.length;i++){let e=n[i].key,u=n[i].value;if(!n[i].value.map){let o=null;u.restriction&&u.restriction.latLngBounds&&u.restriction.latLngBounds.northEast&&u.restriction.latLngBounds.southWest&&(o={latLngBounds:{south:u.restriction.latLngBounds.southWest.latitude,west:u.restriction.latLngBounds.southWest.longitude,north:u.restriction.latLngBounds.northEast.latitude,east:u.restriction.latLngBounds.northEast.longitude},strictBounds:u.restriction.strictBounds});let r=new google.maps.Map(document.getElementById(e),{backgroundColor:u.bgColor,controlSize:u.ctrSize,restriction:o});r.elementId=e;n[i].value.map=r;function f(i,u){if(r&&r.elementId&&i){let f=t(n,r.elementId);if(f){let n=i.latLng.toJSON(),t={Latitude:n.lat,Longitude:n.lng};f.ref.invokeMethodAsync(u,t)}}}r.addListener("click",n=>{f(n,"MapClicked")});r.addListener("dblclick",n=>{f(n,"MapDoubleClicked")});r.addListener("contextmenu",n=>{f(n,"MapContextMenu")});r.addListener("mouseup",n=>{f(n,"MapMouseUp")});r.addListener("mousedown",n=>{f(n,"MapMouseDown")});r.addListener("mousemove",n=>{f(n,"MapMouseMove")});r.addListener("mouseover",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapMouseOver")}});r.addListener("mouseout",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapMouseOut")}});r.addListener("center_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);if(i&&r.getCenter()){let n=r.getCenter().toJSON(),t={Latitude:n.lat,Longitude:n.lng};i.ref.invokeMethodAsync("MapCenterChanged",t)}}});r.addListener("zoom_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapZoomChanged",r.getZoom())}});r.addListener("maptypeid_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapTypeIdChanged",r.getMapTypeId())}});r.addListener("heading_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapHeadingChanged",r.getHeading())}});r.addListener("tilt_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapTiltChanged",r.getTilt())}});r.addListener("bounds_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapBoundsChanged")}});r.addListener("projection_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapProjectionChanged")}});r.addListener("draggable_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapDraggableChanged")}});r.addListener("streetview_changed",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapStreetviewChanged")}});r.addListener("drag",()=>{if(r&&r.elementId){let i=t(n,r.elementId);if(i&&r.getCenter()){let n=r.getCenter().toJSON(),t={Latitude:n.lat,Longitude:n.lng};i.ref.invokeMethodAsync("MapDrag",t)}}});r.addListener("dragend",()=>{if(r&&r.elementId){let i=t(n,r.elementId);if(i&&r.getCenter()){let n=r.getCenter().toJSON(),t={Latitude:n.lat,Longitude:n.lng};i.ref.invokeMethodAsync("MapDragEnd",t)}}});r.addListener("dragstart",()=>{if(r&&r.elementId){let i=t(n,r.elementId);if(i&&r.getCenter()){let n=r.getCenter().toJSON(),t={Latitude:n.lat,Longitude:n.lng};i.ref.invokeMethodAsync("MapDragStart",t)}}});r.addListener("resize",()=>{if(r&&r.elementId){let i=t(n,r.elementId);if(i){let n={Width:r.getDiv().offsetWidth,Height:r.getDiv().offsetHeight};i.ref.invokeMethodAsync("MapResized",n)}}});r.addListener("tilesloaded",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapTilesLoaded")}});r.addListener("idle",()=>{if(r&&r.elementId){let i=t(n,r.elementId);i&&i.ref.invokeMethodAsync("MapIdle")}});n[i].value.ref.invokeMethodAsync("MapInitialized",e)}}};let n=[],r=[];