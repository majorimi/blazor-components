@inject IPermaLinkWatcherService _permalinkWatcher
@inject SingletonComponentService<PermalinkBlazorWasmInitializer> _singleton

@implements IDisposable

@code {
    private static bool Initialized = false;
    protected override void OnInitialized()
    {
        if (_singleton.Initialized)
        {
            throw new ApplicationException($"Component: '{nameof(PermalinkBlazorWasmInitializer)}' is not allowed to have multiple instances. Please define it one your e.g.: 'MainLayout.razor' or some common place.");
        }

        _singleton.Initialized = true;

        _permalinkWatcher.WatchPermaLinks();
    }

    /// <summary>
    /// Gets or sets if peramlink should be scrolled smoothly into view or not.
    /// Note: smooth scroll on element level might not supported by all Browsers.
    /// </summary>
    [Parameter]
    public bool SmoothScroll
    {
        get => _permalinkWatcher.SmoothScroll;
        set { _permalinkWatcher.SmoothScroll = value; }
    }

    public void Dispose()
    {
        _permalinkWatcher?.Dispose();
        _singleton.Initialized = false;
    }
}